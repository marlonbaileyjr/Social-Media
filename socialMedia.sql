CREATE TABLE USER (
    USER_ID INT AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255) NOT NULL,
    USERNAME VARCHAR(255) UNIQUE,
    EMAIL VARCHAR(255) UNIQUE NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    PROFILE_PICTURE LONGBLOB,
    BIO VARCHAR(200),
    DATE_OF_BIRTH DATE NOT NULL,
    DATE_JOINED DATETIME NOT NULL,
    LAST_LOGIN DATETIME NOT NULL
);

CREATE TABLE FRIENDSHIP (
    FRIENDSHIP_ID INT AUTO_INCREMENT PRIMARY KEY,
    FOLLOWER INT NOT NULL,
    FOLLOWED INT NOT NULL,
    TIMESTAMP DATETIME NOT NULL,
    UNIQUE(FOLLOWER, FOLLOWED),
    FOREIGN KEY (FOLLOWER) REFERENCES USER(USER_ID),
    FOREIGN KEY (FOLLOWED) REFERENCES USER(USER_ID)
);

CREATE TABLE POST (
    POST_ID INT AUTO_INCREMENT PRIMARY KEY,
    CAPTION_TEXT TEXT,
    USER_ID INT NOT NULL,
    TIMESTAMP DATETIME NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE PICTURES (
    PICTURE_ID INT AUTO_INCREMENT PRIMARY KEY,
    POST_ID INT NOT NULL,
    MEDIA LONGBLOB,
    TYPE VARCHAR(255),
    ORDER_INT INT,
    TIMESTAMP DATETIME NOT NULL,
    FOREIGN KEY (POST_ID) REFERENCES POST(POST_ID)
);

CREATE TABLE COMMENT (
    COMMENT_ID INT AUTO_INCREMENT PRIMARY KEY,
    POST_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    TEXT VARCHAR(200) NOT NULL,
    TIMESTAMP DATETIME NOT NULL,
    FOREIGN KEY (POST_ID) REFERENCES POST(POST_ID),
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE LIKE_TABLE ( -- "LIKE" is a reserved keyword in SQL, renamed to LIKE_TABLE
    LIKE_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    POST_ID INT,
    TIMESTAMP DATETIME NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (POST_ID) REFERENCES POST(POST_ID)
);
